<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- @Service @Component 등록 -->
	<context:component-scan
		base-package="com.bettopia.admin.model" />

	<!-- DB properties 등록 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="/WEB-INF/spring/mysqlDB.properties" />
		<property name="fileEncoding" value="UTF-8" />
	</bean>

	<!-- DB 개체 등록 -->
	<bean id="dataSourceOriginal" primary="true"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="${mysql.driverClassName}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.pwd}" />
	</bean>

	<!-- sqlSession 환경 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceOriginal"></property>
		<property name="configLocation"
			value="classpath:mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations"
			value="classpath:mybatis/mapper/*Mapper.xml" />
	</bean>

	<!-- Mapper의 SQL구문을 실행 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- transaction처리 -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven
		transaction-manager="transactionManager" /> -->

	<!--transaction적용범위(Advice) 지정 -->
	<!-- <tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" /> 메서드별로 제약조건 별도설정 가능
		</tx:attributes>
	</tx:advice> -->

	<!-- transaction Pointcut지정 -->
	<!-- <aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* aa(..))" />
	</aop:config> -->
	
	<!-- DB log 설정 -->
	<!-- <bean id="dataSource"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceOriginal" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="SINGLE_LINE"></property>
				<property name="sqlPrefix" value="[ SQL문장 ] "></property>
			</bean>
		</property>
	</bean> -->
</beans>
